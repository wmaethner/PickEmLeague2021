// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PickEmLeagueDatabase;

namespace PickEmLeagueDatabase.Migrations
{
    [DbContext(typeof(PickEmLeagueDbContext))]
    [Migration("20211006001442_AddMissedWeeks")]
    partial class AddMissedWeeks
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("PickEmLeagueDatabase.Entities.Game", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("AwayTeamId")
                        .HasColumnType("bigint");

                    b.Property<string>("GameIsoString")
                        .HasColumnType("text");

                    b.Property<int>("GameResult")
                        .HasColumnType("integer");

                    b.Property<DateTime>("GameTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("HomeTeamId")
                        .HasColumnType("bigint");

                    b.Property<int>("Week")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AwayTeamId");

                    b.HasIndex("HomeTeamId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("PickEmLeagueDatabase.Entities.GamePick", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("GameId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Locked")
                        .HasColumnType("boolean");

                    b.Property<int>("Pick")
                        .HasColumnType("integer");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<int>("Wager")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("GamePicks");
                });

            modelBuilder.Entity("PickEmLeagueDatabase.Entities.MiscAdmin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CurrentWeek")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("MiscAdmin");
                });

            modelBuilder.Entity("PickEmLeagueDatabase.Entities.Team", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            City = "Arizona",
                            Name = "Cardinals"
                        },
                        new
                        {
                            Id = 2L,
                            City = "Atlanta",
                            Name = "Falcons"
                        },
                        new
                        {
                            Id = 3L,
                            City = "Baltimore",
                            Name = "Ravens"
                        },
                        new
                        {
                            Id = 4L,
                            City = "Buffalo",
                            Name = "Bills"
                        },
                        new
                        {
                            Id = 5L,
                            City = "Carolina",
                            Name = "Panthers"
                        },
                        new
                        {
                            Id = 6L,
                            City = "Chicago",
                            Name = "Bears"
                        },
                        new
                        {
                            Id = 7L,
                            City = "Cincinnati",
                            Name = "Bengals"
                        },
                        new
                        {
                            Id = 8L,
                            City = "Cleveland",
                            Name = "Browns"
                        },
                        new
                        {
                            Id = 9L,
                            City = "Dallas",
                            Name = "Cowboys"
                        },
                        new
                        {
                            Id = 10L,
                            City = "Denver",
                            Name = "Broncos"
                        },
                        new
                        {
                            Id = 11L,
                            City = "Detroit",
                            Name = "Lions"
                        },
                        new
                        {
                            Id = 12L,
                            City = "Green Bay",
                            Name = "Packers"
                        },
                        new
                        {
                            Id = 13L,
                            City = "Houston",
                            Name = "Texans"
                        },
                        new
                        {
                            Id = 14L,
                            City = "Indianapolis",
                            Name = "Colts"
                        },
                        new
                        {
                            Id = 15L,
                            City = "Jacksonville",
                            Name = "Jaguars"
                        },
                        new
                        {
                            Id = 16L,
                            City = "Kansas City",
                            Name = "Chiefs"
                        },
                        new
                        {
                            Id = 17L,
                            City = "Las Vegas",
                            Name = "Raiders"
                        },
                        new
                        {
                            Id = 18L,
                            City = "Los Angeles",
                            Name = "Chargers"
                        },
                        new
                        {
                            Id = 19L,
                            City = "Los Angeles",
                            Name = "Rams"
                        },
                        new
                        {
                            Id = 20L,
                            City = "Miami",
                            Name = "Dolphins"
                        },
                        new
                        {
                            Id = 21L,
                            City = "Minnesota",
                            Name = "Vikings"
                        },
                        new
                        {
                            Id = 22L,
                            City = "New England",
                            Name = "Patriots"
                        },
                        new
                        {
                            Id = 23L,
                            City = "New Orleans",
                            Name = "Saints"
                        },
                        new
                        {
                            Id = 24L,
                            City = "New York",
                            Name = "Giants"
                        },
                        new
                        {
                            Id = 25L,
                            City = "New York",
                            Name = "Jets"
                        },
                        new
                        {
                            Id = 26L,
                            City = "Philadelphia",
                            Name = "Eagles"
                        },
                        new
                        {
                            Id = 27L,
                            City = "Pittsburgh",
                            Name = "Steelers"
                        },
                        new
                        {
                            Id = 28L,
                            City = "San Francisco",
                            Name = "49ers"
                        },
                        new
                        {
                            Id = 29L,
                            City = "Seattle",
                            Name = "Seahawks"
                        },
                        new
                        {
                            Id = 30L,
                            City = "Tampa Bay",
                            Name = "Buccaneers"
                        },
                        new
                        {
                            Id = 31L,
                            City = "Tennessee",
                            Name = "Titans"
                        },
                        new
                        {
                            Id = 32L,
                            City = "Washington",
                            Name = "Football Team"
                        });
                });

            modelBuilder.Entity("PickEmLeagueDatabase.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<List<int>>("MissedWeeks")
                        .HasColumnType("integer[]");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("ProfilePictureKey")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PickEmLeagueDatabase.Entities.Game", b =>
                {
                    b.HasOne("PickEmLeagueDatabase.Entities.Team", "AwayTeam")
                        .WithMany()
                        .HasForeignKey("AwayTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PickEmLeagueDatabase.Entities.Team", "HomeTeam")
                        .WithMany()
                        .HasForeignKey("HomeTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AwayTeam");

                    b.Navigation("HomeTeam");
                });

            modelBuilder.Entity("PickEmLeagueDatabase.Entities.GamePick", b =>
                {
                    b.HasOne("PickEmLeagueDatabase.Entities.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PickEmLeagueDatabase.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}

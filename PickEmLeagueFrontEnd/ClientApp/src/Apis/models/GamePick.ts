/* tslint:disable */
/* eslint-disable */
/**
 * PickEmLeague
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Game,
    GameFromJSON,
    GameFromJSONTyped,
    GameToJSON,
    GameResult,
    GameResultFromJSON,
    GameResultFromJSONTyped,
    GameResultToJSON,
    User,
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './';

/**
 * 
 * @export
 * @interface GamePick
 */
export interface GamePick {
    /**
     * 
     * @type {GameResult}
     * @memberof GamePick
     */
    pick?: GameResult;
    /**
     * 
     * @type {number}
     * @memberof GamePick
     */
    wager?: number;
    /**
     * 
     * @type {boolean}
     * @memberof GamePick
     */
    locked?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GamePick
     */
    readonly editable?: boolean;
    /**
     * 
     * @type {User}
     * @memberof GamePick
     */
    user?: User;
    /**
     * 
     * @type {Game}
     * @memberof GamePick
     */
    game?: Game;
    /**
     * 
     * @type {number}
     * @memberof GamePick
     */
    userId?: number;
    /**
     * 
     * @type {number}
     * @memberof GamePick
     */
    gameId?: number;
    /**
     * 
     * @type {number}
     * @memberof GamePick
     */
    id?: number;
}

export function GamePickFromJSON(json: any): GamePick {
    return GamePickFromJSONTyped(json, false);
}

export function GamePickFromJSONTyped(json: any, ignoreDiscriminator: boolean): GamePick {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pick': !exists(json, 'pick') ? undefined : GameResultFromJSON(json['pick']),
        'wager': !exists(json, 'wager') ? undefined : json['wager'],
        'locked': !exists(json, 'locked') ? undefined : json['locked'],
        'editable': !exists(json, 'editable') ? undefined : json['editable'],
        'user': !exists(json, 'user') ? undefined : UserFromJSON(json['user']),
        'game': !exists(json, 'game') ? undefined : GameFromJSON(json['game']),
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'gameId': !exists(json, 'gameId') ? undefined : json['gameId'],
        'id': !exists(json, 'id') ? undefined : json['id'],
    };
}

export function GamePickToJSON(value?: GamePick | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'pick': GameResultToJSON(value.pick),
        'wager': value.wager,
        'locked': value.locked,
        'user': UserToJSON(value.user),
        'game': GameToJSON(value.game),
        'userId': value.userId,
        'gameId': value.gameId,
        'id': value.id,
    };
}


